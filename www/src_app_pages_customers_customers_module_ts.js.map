{"version":3,"file":"src_app_pages_customers_customers_module_ts.js","mappings":"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","sources":["./src/app/pages/customers/customers-routing.module.ts","./src/app/pages/customers/customers.module.ts","./src/app/pages/customers/customers.page.ts","./src/app/pages/customers/customers.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CustomersPage } from './customers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CustomersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomersPageRoutingModule } from './customers-routing.module';\nimport {MatTableModule} from '@angular/material/table'; \nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport {MatInputModule} from '@angular/material/input';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CustomersPage } from './customers.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NgxDatatableModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    CustomersPageRoutingModule\n  ],\n  declarations: [CustomersPage]\n})\nexport class CustomersPageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { LoadingController } from '@ionic/angular';\nimport { AvatarService } from 'src/app/services/avatar.service';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.page.html',\n  styleUrls: ['./customers.page.scss'],\n})\nexport class CustomersPage implements OnInit {\n  skeletOns: {}[];\n  hideSkeleton: boolean;\n  drivers: any;\n  hasNoData: boolean;\n  segmentModel = \"default\";\n  triphistory: any;\n\n  displayedColumns: string[] = ['Rider Name', 'Rider Phone', 'Rider Email', 'Rider Rating', 'Rider Image', 'block' ];\n  records = new MatTableDataSource;\n  displayedColumns2: string[] = ['Rider Name', 'Rider Phone', 'Rider Email', 'Rider Rating',  'Rider Latitude', 'Rider Longitude' ];\n  records2 = new MatTableDataSource;\n  segment: any;\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  public columns: any;\n  public rows: any[];\n  redy: number = 3;\n  cancelledhistory: any;\n\n  constructor(private chatService: AvatarService, private loadingController: LoadingController) { }\n\n\n\n  async ionViewDidEnter() {\n    this.skeletOns = [\n      {},{},{},{}\n    ]\n\n    this.hideSkeleton = true;\n    this.triphistory = (this.chatService.getRiders())\n\n    this.triphistory.subscribe((d)=>{\n      this.records.data = d;\n      this.length = this.records.data.length;\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n      this.rows = d;\n      if (d.length == 0){\n        this.hasNoData = true;\n        this.hideSkeleton = false;\n      }else{\n        this.hideSkeleton = false;\n        this.hasNoData = false;\n      }\n  })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n\n  ngOnInit() {\n  }\n\n\n  async gotoDocs(e){\n    console.log(e)\n    const loading = await this.loadingController.create();\n    await loading.present();\n    const fk = await this.chatService.CustomerBlock(true, e.Rider_id);\n\n    loading.dismiss();\n      \n  }\n\n}\n","\n<ion-header class=\"ion-no-border\" [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-buttons slot=\"start\">\n        <ion-menu-button color=\"primary\"></ion-menu-button>\n      </ion-buttons>\n    </ion-buttons>\n    <ion-title> Riders </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\n  <div *ngIf=\"hasNoData\">\n  <ion-img src=\"../assets/imgs/empty.svg\"></ion-img>\n\n  <ion-list-header style=\"margin-top: 10%\">\n    <ion-label color=\"primary\" class=\"ion-text-center\">\n      <h1>No Data</h1>\n      </ion-label>\n  </ion-list-header>\n  </div>\n\n  <div *ngIf=\"hideSkeleton\">\n    <ion-grid  class=\"ion-margin\">\n      <ion-row>\n        <ion-col><ion-skeleton-text [animated]=\"true\" style=\"width: auto; height: 400px;\"></ion-skeleton-text></ion-col>\n      </ion-row>\n    </ion-grid>\n  </div>\n\n\n<div [hidden]=\"hideSkeleton\">\n<ion-card color=\"primary\" class=\"ion-padding\">\n  <mat-form-field appearance=\"standard\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n  </mat-form-field>\n\n  <table mat-table [dataSource]=\"records\" matSort class=\"mat-elevation-z8\">\n\n    <!-- Column -->\n    <ng-container matColumnDef=\"Rider Name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.Rider_name}} </td>\n    </ng-container>\n\n    <!-- Column -->\n    <ng-container matColumnDef=\"Rider Phone\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>  Phone </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.Rider_phone}} </td>\n    </ng-container>\n\n     <!-- Column -->\n     <ng-container matColumnDef=\"Rider Email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.Rider_email}} </td>\n    </ng-container>\n\n\n       <!-- Column -->\n       <ng-container matColumnDef=\"Rider Rating\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Rating </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.Rider_rating}} </td>\n      </ng-container>\n\n\n        <!-- Column -->\n        <ng-container matColumnDef=\"Rider Image\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Image </th>\n          <td mat-cell *matCellDef=\"let element\"> <img src=\"{{element.Rider_imgUrl}}\"/> </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"block\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Block </th>\n          <td mat-cell *matCellDef=\"let element\"> \n            <ion-button color=\"danger\" (click)=\"gotoDocs(element)\"> \n            <ion-icon name=\"skull-outline\"></ion-icon> \n            </ion-button>\n          </td>\n        </ng-container>\n  \n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true;\"></tr>\n    <tr mat-row *matRowDef=\"let row;  columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons>\n  </mat-paginator>\n</ion-card>\n</div>\n\n</ion-content>\n\n\n<ion-footer>\n   \n</ion-footer>"],"names":["MatPaginator","MatSort","MatTableDataSource","i0","CustomersPage","constructor","chatService","loadingController","ionViewDidEnter","skeletOns","hideSkeleton","triphistory","getRiders","subscribe","d","records","data","length","paginator","sort","rows","hasNoData","applyFilter","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","ngOnInit","gotoDocs","e","console","log","loading","create","present","fk","CustomerBlock","Rider_id","dismiss","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}